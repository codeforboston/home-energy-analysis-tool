{
  "version": 3,
  "sources": ["empty-module:./utils/auth.server.ts", "empty-module:./utils/db.server.ts", "empty-module:./utils/env.server.ts", "empty-module:./utils/timing.server.ts", "empty-module:./utils/csrf.server.ts", "empty-module:./utils/honeypot.server.ts", "css-bundle-plugin-ns:@remix-run/css-bundle", "../../app/root.tsx"],
  "sourcesContent": ["module.exports = {};", "module.exports = {};", "module.exports = {};", "module.exports = {};", "module.exports = {};", "module.exports = {};", "export const cssBundleHref = \"/build/css-bundle-QHCTROZA.css\";", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/root.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/root.tsx\");\n}\n// REMIX HMR END\n\nimport { cssBundleHref } from '@remix-run/css-bundle';\nimport { json } from '@remix-run/node';\nimport { Links, Scripts, Outlet } from '@remix-run/react';\nimport { href as iconsHref } from './components/ui/icon.tsx';\nimport fontStyleSheetUrl from './styles/font.css';\nimport tailwindStyleSheetUrl from './styles/tailwind.css';\nimport \"./App.css?__remix_sideEffect__\";\nimport { getUserId } from './utils/auth.server.ts';\nimport { getHints } from './utils/client-hints.tsx';\nimport { prisma } from './utils/db.server.ts';\nimport { getEnv } from './utils/env.server.ts';\nimport { combineHeaders, getDomainUrl } from './utils/misc.tsx';\nimport { combineServerTimings, makeTimings, time } from './utils/timing.server.ts';\n// Hints may not be required. Double check.\n\nimport { csrf } from './utils/csrf.server.ts';\nimport { honeypot } from './utils/honeypot.server.ts';\nexport const links = () => {\n  return [\n  // Preload svg sprite as a resource to avoid render blocking\n  {\n    rel: 'preload',\n    href: iconsHref,\n    as: 'image'\n  },\n  // Preload CSS as a resource to avoid render blocking\n  {\n    rel: 'preload',\n    href: fontStyleSheetUrl,\n    as: 'style'\n  }, {\n    rel: 'preload',\n    href: tailwindStyleSheetUrl,\n    as: 'style'\n  }, cssBundleHref ? {\n    rel: 'preload',\n    href: cssBundleHref,\n    as: 'style'\n  } : null, {\n    rel: 'mask-icon',\n    href: '/favicons/mask-icon.svg'\n  }, {\n    rel: 'alternate icon',\n    type: 'image/png',\n    href: '/favicons/favicon-32x32.png'\n  }, {\n    rel: 'apple-touch-icon',\n    href: '/favicons/apple-touch-icon.png'\n  }, {\n    rel: 'manifest',\n    href: '/site.webmanifest',\n    crossOrigin: 'use-credentials'\n  },\n  // necessary to make typescript happy\n  //These should match the css preloads above to avoid css as render blocking resource\n  {\n    rel: 'icon',\n    type: 'image/svg+xml',\n    href: '/favicons/favicon.svg'\n  }, {\n    rel: 'stylesheet',\n    href: fontStyleSheetUrl\n  }, {\n    rel: 'stylesheet',\n    href: tailwindStyleSheetUrl\n  }, cssBundleHref ? {\n    rel: 'stylesheet',\n    href: cssBundleHref\n  } : null].filter(Boolean);\n};\nexport async function loader({\n  request\n}) {\n  const timings = makeTimings('root loader');\n  const userId = await time(() => getUserId(request), {\n    timings,\n    type: 'getUserId',\n    desc: 'getUserId in root'\n  });\n  const user = userId ? await time(() => prisma.user.findUniqueOrThrow({\n    select: {\n      id: true,\n      name: true,\n      username: true,\n      image: {\n        select: {\n          id: true\n        }\n      },\n      roles: {\n        select: {\n          name: true,\n          permissions: {\n            select: {\n              entity: true,\n              action: true,\n              access: true\n            }\n          }\n        }\n      }\n    },\n    where: {\n      id: userId\n    }\n  }), {\n    timings,\n    type: 'find user',\n    desc: 'find user in root'\n  }) : null;\n  const honeyProps = honeypot.getInputProps();\n  const [csrfToken, csrfCookieHeader] = await csrf.commitToken();\n  // Weather station data\n  const w_href = 'https://archive-api.open-meteo.com/v1/archive?latitude=52.52&longitude=13.41&daily=temperature_2m_max&timezone=America%2FNew_York&start_date=2022-01-01&end_date=2023-08-30&temperature_unit=fahrenheit';\n  const w_res = await fetch(w_href);\n  const weather = await w_res.json();\n  return json({\n    weather: weather,\n    user: user,\n    requestInfo: {\n      /* hints may not be absolutely required, double check */\n      hints: getHints(request),\n      origin: getDomainUrl(request),\n      path: new URL(request.url).pathname,\n      userPrefs: {}\n    },\n    ENV: getEnv(),\n    honeyProps,\n    csrfToken\n  }, {\n    headers: combineHeaders({\n      'Server-Timing': timings.toString()\n    }, csrfCookieHeader ? {\n      'set-cookie': csrfCookieHeader\n    } : null)\n  });\n}\n\n/**\n * Step 4 of making Server Timings\n * https://github.com/epicweb-dev/epic-stack/blob/main/docs/server-timing.md\n */\nexport const headers = ({\n  loaderHeaders,\n  parentHeaders\n}) => {\n  return {\n    'Server-Timing': combineServerTimings(parentHeaders, loaderHeaders)\n  };\n};\nexport default function HeatStack({\n  children,\n  env = {},\n  nonce\n}) {\n  return <html lang=\"en\" className={`${'light'} h-full overflow-x-hidden`}>\n\t\t\t<head>\n\t\t\t\t<meta charSet=\"utf-8\" />\n\t\t\t\t<meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n\t\t\t\t<Links />\n\t\t\t</head>\n\t\t\t<body className=\"bg-background text-foreground\">\n\t\t\t\t<div className=\"container items-center justify-between gap-4 md:h-24 md:flex-row\">\n\t\t\t\t\t<div>Site header</div>\n\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<Outlet />\n\t\t\t\t\t<br />\n\t\t\t\t\t<hr />\n\t\t\t\t\t<div>Site footer</div>\n\t\t\t\t</div>\n\t\t\t\t<script nonce={nonce} dangerouslySetInnerHTML={{\n        __html: `window.ENV = ${JSON.stringify(env)}`\n      }} />\n\n\t\t\t\t<Scripts nonce={nonce} />\n\t\t\t</body>\n\t\t</html>;\n}\n_c = HeatStack;\nvar _c;\n$RefreshReg$(_c, \"HeatStack\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
