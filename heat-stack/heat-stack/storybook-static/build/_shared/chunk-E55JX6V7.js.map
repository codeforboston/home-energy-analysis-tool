{
  "version": 3,
  "sources": ["empty-module:#app/utils/csrf.server.ts", "../../../node_modules/remix-utils/build/react/authenticity-token.js"],
  "sourcesContent": ["module.exports = {};", "import * as React from \"react\";\nlet context = React.createContext(null);\n/**\n * Save the Authenticity Token into context\n * @example\n * // Add `<AuthenticityTokenProvider>` wrapping your Outlet\n * let { csrf } = useLoaderData<typeof loader>();\n * return (\n *   <AuthenticityTokenProvider token={csrf}>\n *     <Outlet />\n *   </AuthenticityTokenProvider>\n * )\n */\nexport function AuthenticityTokenProvider({ children, token, }) {\n    return React.createElement(context.Provider, { value: token }, children);\n}\n/**\n * Get the authenticity token, this should be used to send it in a submit.\n * @example\n * let token = useAuthenticityToken();\n * let submit = useSubmit();\n * function sendFormWithCode() {\n *   submit(\n *     { csrf: token, ...otherData },\n *     { action: \"/action\", method: \"post\" },\n *   );\n * }\n */\nexport function useAuthenticityToken() {\n    let token = React.useContext(context);\n    if (!token)\n        throw new Error(\"Missing AuthenticityTokenProvider.\");\n    return token;\n}\n/**\n * Render a hidden input with the name csrf and the authenticity token as value.\n * @example\n * // Default usage\n * return (\n *   <Form action=\"/login\" method=\"post\">\n *     <AuthenticityTokenInput />\n *     <input name=\"email\" type=\"email\" />\n *     <input name=\"password\" type=\"password\" />\n *     <button type=\"submit\">Login</button>\n *   </Form>\n * );\n * @example\n * // Customizing the name\n * <AuthenticityTokenInput name=\"authenticity_token\" />\n */\nexport function AuthenticityTokenInput({ name = \"csrf\", }) {\n    let token = useAuthenticityToken();\n    return React.createElement(\"input\", { type: \"hidden\", value: token, name: name });\n}\n"],
  "mappings": ";;;;;;;;;AAAA;AAAA;AAAA,WAAO,UAAU,CAAC;AAAA;AAAA;;;ACAlB,YAAuB;AACvB,IAAI,UAAgB,oBAAc,IAAI;AA2B/B,SAAS,uBAAuB;AACnC,MAAI,QAAc,iBAAW,OAAO;AACpC,MAAI,CAAC;AACD,UAAM,IAAI,MAAM,oCAAoC;AACxD,SAAO;AACX;AAiBO,SAAS,uBAAuB,EAAE,OAAO,OAAQ,GAAG;AACvD,MAAI,QAAQ,qBAAqB;AACjC,SAAa,oBAAc,SAAS,EAAE,MAAM,UAAU,OAAO,OAAO,KAAW,CAAC;AACpF;",
  "names": []
}
