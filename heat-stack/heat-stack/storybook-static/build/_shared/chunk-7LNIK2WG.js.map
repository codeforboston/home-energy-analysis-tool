{
  "version": 3,
  "sources": ["../../../node_modules/@noble/hashes/src/_assert.ts", "../../../node_modules/@noble/hashes/src/_u64.ts", "../../../node_modules/@noble/hashes/src/crypto.ts", "../../../node_modules/@noble/hashes/src/utils.ts", "../../../node_modules/@noble/hashes/src/sha3.ts", "../../../node_modules/@paralleldrive/cuid2/src/index.js", "../../../node_modules/@paralleldrive/cuid2/index.js", "../../../app/routes/users+/$username_+/__note-editor.tsx"],
  "sourcesContent": ["function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new Error('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n", "const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number) => l;\nconst rotr32L = (h: number, _l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n", "// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n", "/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!u8a(data)) throw new Error(`expected Uint8Array, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n", "import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport {\n  Hash,\n  u32,\n  Input,\n  toBytes,\n  wrapConstructor,\n  wrapXOFConstructorWithOpts,\n  HashXOF,\n} from './utils.js';\n\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA]: [number[], number[], bigint[]] = [[], [], []];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x));\n  // Rotational\n  SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n  // Iota\n  let t = _0n;\n  for (let j = 0; j < 7; j++) {\n    R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n    if (R & _2n) t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n  }\n  _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h: number, l: number, s: number) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h: number, l: number, s: number) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s: Uint32Array, rounds: number = 24) {\n  const B = new Uint32Array(5 * 2);\n  // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta \u03B8\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    }\n    // Rho (\u03C1) and Pi (\u03C0)\n    let curH = s[2];\n    let curL = s[3];\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    }\n    // Chi (\u03C7)\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    }\n    // Iota (\u03B9)\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n  B.fill(0);\n}\n\nexport class Keccak extends Hash<Keccak> implements HashXOF<Keccak> {\n  protected state: Uint8Array;\n  protected pos = 0;\n  protected posOut = 0;\n  protected finished = false;\n  protected state32: Uint32Array;\n  protected destroyed = false;\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(\n    public blockLen: number,\n    public suffix: number,\n    public outputLen: number,\n    protected enableXOF = false,\n    protected rounds: number = 24\n  ) {\n    super();\n    // Can be passed from user as dkLen\n    number(outputLen);\n    // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n    if (0 >= this.blockLen || this.blockLen >= 200)\n      throw new Error('Sha3 supports only keccak-f1600 function');\n    this.state = new Uint8Array(200);\n    this.state32 = u32(this.state);\n  }\n  protected keccak() {\n    keccakP(this.state32, this.rounds);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n  update(data: Input) {\n    exists(this);\n    const { blockLen, state } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n      if (this.pos === blockLen) this.keccak();\n    }\n    return this;\n  }\n  protected finish() {\n    if (this.finished) return;\n    this.finished = true;\n    const { state, suffix, pos, blockLen } = this;\n    // Do the padding\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n  protected writeInto(out: Uint8Array): Uint8Array {\n    exists(this, false);\n    bytes(out);\n    this.finish();\n    const bufferOut = this.state;\n    const { blockLen } = this;\n    for (let pos = 0, len = out.length; pos < len; ) {\n      if (this.posOut >= blockLen) this.keccak();\n      const take = Math.min(blockLen - this.posOut, len - pos);\n      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n    return out;\n  }\n  xofInto(out: Uint8Array): Uint8Array {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n  xof(bytes: number): Uint8Array {\n    number(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n  digestInto(out: Uint8Array) {\n    output(out, this);\n    if (this.finished) throw new Error('digest() was already called');\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n  digest() {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n  destroy() {\n    this.destroyed = true;\n    this.state.fill(0);\n  }\n  _cloneInto(to?: Keccak): Keccak {\n    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n    to ||= new Keccak(blockLen, suffix, outputLen, enableXOF, rounds);\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds;\n    // Suffix can change in cSHAKE\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n}\n\nconst gen = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\n\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\n\nexport type ShakeOpts = { dkLen?: number };\n\nconst genShake = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapXOFConstructorWithOpts<HashXOF<Keccak>, ShakeOpts>(\n    (opts: ShakeOpts = {}) =>\n      new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true)\n  );\n\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n", "/* global global, window, module */\nconst { sha3_512: sha3 } = require(\"@noble/hashes/sha3\");\n\nconst defaultLength = 24;\nconst bigLength = 32;\n\nconst createEntropy = (length = 4, random = Math.random) => {\n  let entropy = \"\";\n\n  while (entropy.length < length) {\n    entropy = entropy + Math.floor(random() * 36).toString(36);\n  }\n  return entropy;\n};\n\n/*\n * Adapted from https://github.com/juanelas/bigint-conversion\n * MIT License Copyright (c) 2018 Juan Hern\u00E1ndez Serrano\n */\nfunction bufToBigInt(buf) {\n  let bits = 8n;\n\n  let value = 0n;\n  for (const i of buf.values()) {\n    const bi = BigInt(i);\n    value = (value << bits) + bi;\n  }\n  return value;\n}\n\nconst hash = (input = \"\") => {\n  // Drop the first character because it will bias the histogram\n  // to the left.\n  return bufToBigInt(sha3(input)).toString(36).slice(1);\n};\n\nconst alphabet = Array.from({ length: 26 }, (x, i) =>\n  String.fromCharCode(i + 97)\n);\n\nconst randomLetter = (random) =>\n  alphabet[Math.floor(random() * alphabet.length)];\n\n/*\nThis is a fingerprint of the host environment. It is used to help\nprevent collisions when generating ids in a distributed system.\nIf no global object is available, you can pass in your own, or fall back\non a random string.\n*/\nconst createFingerprint = ({\n  globalObj = typeof global !== \"undefined\"\n    ? global\n    : typeof window !== \"undefined\"\n    ? window\n    : {},\n  random = Math.random,\n} = {}) => {\n  const globals = Object.keys(globalObj).toString();\n  const sourceString = globals.length\n    ? globals + createEntropy(bigLength, random)\n    : createEntropy(bigLength, random);\n\n  return hash(sourceString).substring(0, bigLength);\n};\n\nconst createCounter = (count) => () => {\n  return count++;\n};\n\n// ~22k hosts before 50% chance of initial counter collision\n// with a remaining counter range of 9.0e+15 in JavaScript.\nconst initialCountMax = 476782367;\n\nconst init = ({\n  // Fallback if the user does not pass in a CSPRNG. This should be OK\n  // because we don't rely solely on the random number generator for entropy.\n  // We also use the host fingerprint, current time, and a session counter.\n  random = Math.random,\n  counter = createCounter(Math.floor(random() * initialCountMax)),\n  length = defaultLength,\n  fingerprint = createFingerprint({ random }),\n} = {}) => {\n  return function cuid2() {\n    const firstLetter = randomLetter(random);\n\n    // If we're lucky, the `.toString(36)` calls may reduce hashing rounds\n    // by shortening the input to the hash function a little.\n    const time = Date.now().toString(36);\n    const count = counter().toString(36);\n\n    // The salt should be long enough to be globally unique across the full\n    // length of the hash. For simplicity, we use the same length as the\n    // intended id output.\n    const salt = createEntropy(length, random);\n    const hashInput = `${time + salt + count + fingerprint}`;\n\n    return `${firstLetter + hash(hashInput).substring(1, length)}`;\n  };\n};\n\nconst createId = init();\n\nconst isCuid = (id, { minLength = 2, maxLength = bigLength } = {}) => {\n  const length = id.length;\n  const regex = /^[0-9a-z]+$/;\n\n  try {\n    if (\n      typeof id === \"string\" &&\n      length >= minLength &&\n      length <= maxLength &&\n      regex.test(id)\n    )\n      return true;\n  } finally {\n  }\n\n  return false;\n};\n\nmodule.exports.getConstants = () => ({ defaultLength, bigLength });\nmodule.exports.init = init;\nmodule.exports.createId = createId;\nmodule.exports.bufToBigInt = bufToBigInt;\nmodule.exports.createCounter = createCounter;\nmodule.exports.createFingerprint = createFingerprint;\nmodule.exports.isCuid = isCuid;\n", "const { createId, init, getConstants, isCuid } = require(\"./src/index\");\n\nmodule.exports.createId = createId;\nmodule.exports.init = init;\nmodule.exports.getConstants = getConstants;\nmodule.exports.isCuid = isCuid;\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/users+/$username_+/__note-editor.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/users+/$username_+/__note-editor.tsx\");\n  import.meta.hot.lastModified = \"1706218436656.8838\";\n}\n// REMIX HMR END\n\nimport { conform, list, useFieldList, useFieldset, useForm } from '@conform-to/react';\nimport { getFieldsetConstraint, parse } from '@conform-to/zod';\nimport { createId as cuid } from '@paralleldrive/cuid2';\nimport { unstable_createMemoryUploadHandler as createMemoryUploadHandler, json, unstable_parseMultipartFormData as parseMultipartFormData, redirect } from '@remix-run/node';\nimport { Form, useActionData, useNavigation } from '@remix-run/react';\nimport { useRef, useState } from 'react';\nimport { AuthenticityTokenInput } from 'remix-utils/csrf/react';\nimport { z } from 'zod';\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx';\nimport { floatingToolbarClassName } from '#app/components/floating-toolbar.tsx';\nimport { ErrorList, Field, TextareaField } from '#app/components/forms.tsx';\nimport { Button } from '#app/components/ui/button.tsx';\nimport { Icon } from '#app/components/ui/icon.tsx';\nimport { Label } from '#app/components/ui/label.tsx';\nimport { StatusButton } from '#app/components/ui/status-button.tsx';\nimport { Textarea } from '#app/components/ui/textarea.tsx';\nimport { requireUserId } from '#app/utils/auth.server.ts';\nimport { validateCSRF } from '#app/utils/csrf.server.ts';\nimport { prisma } from '#app/utils/db.server.ts';\nimport { cn, getNoteImgSrc } from '#app/utils/misc.tsx';\nconst titleMinLength = 1;\nconst titleMaxLength = 100;\nconst contentMinLength = 1;\nconst contentMaxLength = 10000;\nconst MAX_UPLOAD_SIZE = 1024 * 1024 * 3; // 3MB\n\nconst ImageFieldsetSchema = z.object({\n  id: z.string().optional(),\n  file: z.instanceof(File).optional().refine(file => {\n    return !file || file.size <= MAX_UPLOAD_SIZE;\n  }, 'File size must be less than 3MB'),\n  altText: z.string().optional()\n});\nfunction imageHasFile(image) {\n  return Boolean(image.file?.size && image.file?.size > 0);\n}\nfunction imageHasId(image) {\n  return image.id != null;\n}\nconst NoteEditorSchema = z.object({\n  id: z.string().optional(),\n  title: z.string().min(titleMinLength).max(titleMaxLength),\n  content: z.string().min(contentMinLength).max(contentMaxLength),\n  images: z.array(ImageFieldsetSchema).max(5).optional()\n});\nexport async function action({\n  request\n}) {\n  const userId = await requireUserId(request);\n  const formData = await parseMultipartFormData(request, createMemoryUploadHandler({\n    maxPartSize: MAX_UPLOAD_SIZE\n  }));\n  await validateCSRF(formData, request.headers);\n  const submission = await parse(formData, {\n    schema: NoteEditorSchema.superRefine(async (data, ctx) => {\n      if (!data.id) return;\n      const note = await prisma.note.findUnique({\n        select: {\n          id: true\n        },\n        where: {\n          id: data.id,\n          ownerId: userId\n        }\n      });\n      if (!note) {\n        ctx.addIssue({\n          code: z.ZodIssueCode.custom,\n          message: 'Note not found'\n        });\n      }\n    }).transform(async ({\n      images = [],\n      ...data\n    }) => {\n      return {\n        ...data,\n        imageUpdates: await Promise.all(images.filter(imageHasId).map(async i => {\n          if (imageHasFile(i)) {\n            return {\n              id: i.id,\n              altText: i.altText,\n              contentType: i.file.type,\n              blob: Buffer.from(await i.file.arrayBuffer())\n            };\n          } else {\n            return {\n              id: i.id,\n              altText: i.altText\n            };\n          }\n        })),\n        newImages: await Promise.all(images.filter(imageHasFile).filter(i => !i.id).map(async image => {\n          return {\n            altText: image.altText,\n            contentType: image.file.type,\n            blob: Buffer.from(await image.file.arrayBuffer())\n          };\n        }))\n      };\n    }),\n    async: true\n  });\n  if (submission.intent !== 'submit') {\n    return json({\n      submission\n    });\n  }\n  if (!submission.value) {\n    return json({\n      submission\n    }, {\n      status: 400\n    });\n  }\n  const {\n    id: noteId,\n    title,\n    content,\n    imageUpdates = [],\n    newImages = []\n  } = submission.value;\n  const updatedNote = await prisma.note.upsert({\n    select: {\n      id: true,\n      owner: {\n        select: {\n          username: true\n        }\n      }\n    },\n    where: {\n      id: noteId ?? '__new_note__'\n    },\n    create: {\n      ownerId: userId,\n      title,\n      content,\n      images: {\n        create: newImages\n      }\n    },\n    update: {\n      title,\n      content,\n      images: {\n        deleteMany: {\n          id: {\n            notIn: imageUpdates.map(i => i.id)\n          }\n        },\n        updateMany: imageUpdates.map(updates => ({\n          where: {\n            id: updates.id\n          },\n          data: {\n            ...updates,\n            id: updates.blob ? cuid() : updates.id\n          }\n        })),\n        create: newImages\n      }\n    }\n  });\n  return redirect(`/users/${updatedNote.owner.username}/notes/${updatedNote.id}`);\n}\nexport function NoteEditor({\n  note\n}) {\n  _s();\n  const actionData = useActionData();\n  const navigation = useNavigation();\n  const isPending = navigation.state !== 'idle';\n  const [form, fields] = useForm({\n    id: 'note-editor',\n    constraint: getFieldsetConstraint(NoteEditorSchema),\n    lastSubmission: actionData?.submission,\n    onValidate({\n      formData\n    }) {\n      return parse(formData, {\n        schema: NoteEditorSchema\n      });\n    },\n    defaultValue: {\n      title: note?.title ?? '',\n      content: note?.content ?? '',\n      images: note?.images ?? [{}]\n    }\n  });\n  const imageList = useFieldList(form.ref, fields.images);\n  return <div className=\"absolute inset-0\">\n\t\t\t<Form method=\"POST\" className=\"flex h-full flex-col gap-y-4 overflow-y-auto overflow-x-hidden px-10 pb-28 pt-12\" {...form.props} encType=\"multipart/form-data\">\n\t\t\t\t<AuthenticityTokenInput />\n\t\t\t\t{/*\n     This hidden submit button is here to ensure that when the user hits\n     \"enter\" on an input field, the primary form function is submitted\n     rather than the first button in the form (which is delete/add image).\n     */}\n\t\t\t\t<button type=\"submit\" className=\"hidden\" />\n\t\t\t\t{note ? <input type=\"hidden\" name=\"id\" value={note.id} /> : null}\n\t\t\t\t<div className=\"flex flex-col gap-1\">\n\t\t\t\t\t<Field labelProps={{\n          children: 'Title'\n        }} inputProps={{\n          autoFocus: true,\n          ...conform.input(fields.title, {\n            ariaAttributes: true\n          })\n        }} errors={fields.title.errors} />\n\t\t\t\t\t<TextareaField labelProps={{\n          children: 'Content'\n        }} textareaProps={{\n          ...conform.textarea(fields.content, {\n            ariaAttributes: true\n          })\n        }} errors={fields.content.errors} />\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Label>Images</Label>\n\t\t\t\t\t\t<ul className=\"flex flex-col gap-4\">\n\t\t\t\t\t\t\t{imageList.map((image, index) => <li key={image.key} className=\"relative border-b-2 border-muted-foreground\">\n\t\t\t\t\t\t\t\t\t<button className=\"absolute right-0 top-0 text-foreground-destructive\" {...list.remove(fields.images.name, {\n                index\n              })}>\n\t\t\t\t\t\t\t\t\t\t<span aria-hidden>\n\t\t\t\t\t\t\t\t\t\t\t<Icon name=\"cross-1\" />\n\t\t\t\t\t\t\t\t\t\t</span>{' '}\n\t\t\t\t\t\t\t\t\t\t<span className=\"sr-only\">Remove image {index + 1}</span>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t<ImageChooser config={image} />\n\t\t\t\t\t\t\t\t</li>)}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Button className=\"mt-3\" {...list.insert(fields.images.name, {\n          defaultValue: {}\n        })}>\n\t\t\t\t\t\t<span aria-hidden>\n\t\t\t\t\t\t\t<Icon name=\"plus\">Image</Icon>\n\t\t\t\t\t\t</span>{' '}\n\t\t\t\t\t\t<span className=\"sr-only\">Add image</span>\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t\t<ErrorList id={form.errorId} errors={form.errors} />\n\t\t\t</Form>\n\t\t\t<div className={floatingToolbarClassName}>\n\t\t\t\t<Button form={form.id} variant=\"destructive\" type=\"reset\">\n\t\t\t\t\tReset\n\t\t\t\t</Button>\n\t\t\t\t<StatusButton form={form.id} type=\"submit\" disabled={isPending} status={isPending ? 'pending' : 'idle'}>\n\t\t\t\t\tSubmit\n\t\t\t\t</StatusButton>\n\t\t\t</div>\n\t\t</div>;\n}\n_s(NoteEditor, \"Js81CkdkqAmnkV6+4sKiltMUaFs=\", false, function () {\n  return [useActionData, useNavigation, useForm, useFieldList];\n});\n_c = NoteEditor;\nfunction ImageChooser({\n  config\n}) {\n  _s2();\n  const ref = useRef(null);\n  const fields = useFieldset(ref, config);\n  const existingImage = Boolean(fields.id.defaultValue);\n  const [previewImage, setPreviewImage] = useState(fields.id.defaultValue ? getNoteImgSrc(fields.id.defaultValue) : null);\n  const [altText, setAltText] = useState(fields.altText.defaultValue ?? '');\n  return <fieldset ref={ref} aria-invalid={Boolean(config.errors?.length) || undefined} aria-describedby={config.errors?.length ? config.errorId : undefined}>\n\t\t\t<div className=\"flex gap-3\">\n\t\t\t\t<div className=\"w-32\">\n\t\t\t\t\t<div className=\"relative h-32 w-32\">\n\t\t\t\t\t\t<label htmlFor={fields.file.id} className={cn('group absolute h-32 w-32 rounded-lg', {\n            'bg-accent opacity-40 focus-within:opacity-100 hover:opacity-100': !previewImage,\n            'cursor-pointer focus-within:ring-4': !existingImage\n          })}>\n\t\t\t\t\t\t\t{previewImage ? <div className=\"relative\">\n\t\t\t\t\t\t\t\t\t<img src={previewImage} alt={altText ?? ''} className=\"h-32 w-32 rounded-lg object-cover\" />\n\t\t\t\t\t\t\t\t\t{existingImage ? null : <div className=\"pointer-events-none absolute -right-0.5 -top-0.5 rotate-12 rounded-sm bg-secondary px-2 py-1 text-xs text-secondary-foreground shadow-md\">\n\t\t\t\t\t\t\t\t\t\t\tnew\n\t\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t</div> : <div className=\"flex h-32 w-32 items-center justify-center rounded-lg border border-muted-foreground text-4xl text-muted-foreground\">\n\t\t\t\t\t\t\t\t\t<Icon name=\"plus\" />\n\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t{existingImage ? <input {...conform.input(fields.id, {\n              type: 'hidden',\n              ariaAttributes: true\n            })} /> : null}\n\t\t\t\t\t\t\t<input aria-label=\"Image\" className=\"absolute left-0 top-0 z-0 h-32 w-32 cursor-pointer opacity-0\" onChange={event => {\n              const file = event.target.files?.[0];\n              if (file) {\n                const reader = new FileReader();\n                reader.onloadend = () => {\n                  setPreviewImage(reader.result);\n                };\n                reader.readAsDataURL(file);\n              } else {\n                setPreviewImage(null);\n              }\n            }} accept=\"image/*\" {...conform.input(fields.file, {\n              type: 'file',\n              ariaAttributes: true\n            })} />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"min-h-[32px] px-4 pb-3 pt-1\">\n\t\t\t\t\t\t<ErrorList id={fields.file.errorId} errors={fields.file.errors} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex-1\">\n\t\t\t\t\t<Label htmlFor={fields.altText.id}>Alt Text</Label>\n\t\t\t\t\t<Textarea onChange={e => setAltText(e.currentTarget.value)} {...conform.textarea(fields.altText, {\n          ariaAttributes: true\n        })} />\n\t\t\t\t\t<div className=\"min-h-[32px] px-4 pb-3 pt-1\">\n\t\t\t\t\t\t<ErrorList id={fields.altText.errorId} errors={fields.altText.errors} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"min-h-[32px] px-4 pb-3 pt-1\">\n\t\t\t\t<ErrorList id={config.errorId} errors={config.errors} />\n\t\t\t</div>\n\t\t</fieldset>;\n}\n_s2(ImageChooser, \"toTyiv0L2k2Zx+7w2dEZftOgTA0=\", false, function () {\n  return [useFieldset];\n});\n_c2 = ImageChooser;\nexport function ErrorBoundary() {\n  return <GeneralErrorBoundary statusHandlers={{\n    404: ({\n      params\n    }) => <p>No note with the id \"{params.noteId}\" exists</p>\n  }} />;\n}\n_c3 = ErrorBoundary;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"NoteEditor\");\n$RefreshReg$(_c2, \"ImageChooser\");\n$RefreshReg$(_c3, \"ErrorBoundary\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["hash", "import_react"]
}
