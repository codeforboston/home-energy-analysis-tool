{
  "version": 3,
  "sources": ["../../../app/utils/connections.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/utils/connections.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/utils/connections.tsx\");\n  import.meta.hot.lastModified = \"1706218436656.8838\";\n}\n// REMIX HMR END\n\nimport { Form } from '@remix-run/react';\nimport { z } from 'zod';\nimport { Icon } from '#app/components/ui/icon.tsx';\nimport { StatusButton } from '#app/components/ui/status-button.tsx';\nimport { useIsPending } from './misc.tsx';\nexport const GITHUB_PROVIDER_NAME = 'github';\n// to add another provider, set their name here and add it to the providerNames below\n\nexport const providerNames = [GITHUB_PROVIDER_NAME];\nexport const ProviderNameSchema = z.enum(providerNames);\nexport const providerLabels = {\n  [GITHUB_PROVIDER_NAME]: 'GitHub'\n};\nexport const providerIcons = {\n  [GITHUB_PROVIDER_NAME]: <Icon name=\"github-logo\" />\n};\nexport function ProviderConnectionForm({\n  redirectTo,\n  type,\n  providerName\n}) {\n  _s();\n  const label = providerLabels[providerName];\n  const formAction = `/auth/${providerName}`;\n  const isPending = useIsPending({\n    formAction\n  });\n  return <Form className=\"flex items-center justify-center gap-2\" action={formAction} method=\"POST\">\n\t\t\t{redirectTo ? <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} /> : null}\n\t\t\t<StatusButton type=\"submit\" className=\"w-full\" status={isPending ? 'pending' : 'idle'}>\n\t\t\t\t<span className=\"inline-flex items-center gap-1.5\">\n\t\t\t\t\t{providerIcons[providerName]}\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{type} with {label}\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</StatusButton>\n\t\t</Form>;\n}\n_s(ProviderConnectionForm, \"JnlFCv26QAup6Xc6GVGrzVOlibc=\", false, function () {\n  return [useIsPending];\n});\n_c = ProviderConnectionForm;\nvar _c;\n$RefreshReg$(_c, \"ProviderConnectionForm\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAmC0B;AAlC1B,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,gCAAkC,EAAE;AAAA,EAC7E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA2B;AAC3B,cAAY,IAAI,eAAe;AACjC;AAQO,IAAM,uBAAuB;AAG7B,IAAM,gBAAgB,CAAC,oBAAoB;AAC3C,IAAM,qBAAqB,EAAE,KAAK,aAAa;AAC/C,IAAM,iBAAiB;AAAA,EAC5B,CAAC,oBAAoB,GAAG;AAC1B;AACO,IAAM,gBAAgB;AAAA,EAC3B,CAAC,oBAAoB,GAAG,mDAAC,QAAK,MAAK,iBAAX;AAAA;AAAA;AAAA;AAAA,SAAyB;AACnD;AACO,SAAS,uBAAuB;AAAA,EACrC;AAAA,EACA;AAAA,EACA;AACF,GAAG;AACD,KAAG;AACH,QAAM,QAAQ,eAAe,YAAY;AACzC,QAAM,aAAa,SAAS;AAC5B,QAAM,YAAY,aAAa;AAAA,IAC7B;AAAA,EACF,CAAC;AACD,SAAO,mDAAC,QAAK,WAAU,0CAAyC,QAAQ,YAAY,QAAO,QACzF;AAAA,iBAAa,mDAAC,WAAM,MAAK,UAAS,MAAK,cAAa,OAAO,cAA9C;AAAA;AAAA;AAAA;AAAA,WAA0D,IAAK;AAAA,IAC7E,mDAAC,gBAAa,MAAK,UAAS,WAAU,UAAS,QAAQ,YAAY,YAAY,QAC9E,6DAAC,UAAK,WAAU,oCACd;AAAA,oBAAc,YAAY;AAAA,MAC3B,mDAAC,UACC;AAAA;AAAA,QAAK;AAAA,QAAO;AAAA,WADd;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SAJD;AAAA;AAAA;AAAA;AAAA,WAKA,KAND;AAAA;AAAA;AAAA;AAAA,WAOA;AAAA,OATM;AAAA;AAAA;AAAA;AAAA,SAUP;AACF;AACA,GAAG,wBAAwB,gCAAgC,OAAO,WAAY;AAC5E,SAAO,CAAC,YAAY;AACtB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,wBAAwB;AAEzC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
