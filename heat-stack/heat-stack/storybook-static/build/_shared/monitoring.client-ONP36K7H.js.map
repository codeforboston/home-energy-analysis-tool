{
  "version": 3,
  "sources": ["../../../app/utils/monitoring.client.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/utils/monitoring.client.tsx\"\n);\nimport.meta.hot.lastModified = \"1706218436656.8838\";\n}\n// REMIX HMR END\n\nimport { useLocation, useMatches } from '@remix-run/react'\nimport * as Sentry from '@sentry/remix'\nimport { useEffect } from 'react'\n\nexport function init() {\n\tSentry.init({\n\t\tdsn: ENV.SENTRY_DSN,\n\t\tenvironment: ENV.MODE,\n\t\tintegrations: [\n\t\t\tnew Sentry.BrowserTracing({\n\t\t\t\troutingInstrumentation: Sentry.remixRouterInstrumentation(\n\t\t\t\t\tuseEffect,\n\t\t\t\t\tuseLocation,\n\t\t\t\t\tuseMatches,\n\t\t\t\t),\n\t\t\t}),\n\t\t\t// Replay is only available in the client\n\t\t\tnew Sentry.Replay(),\n\t\t\tnew Sentry.BrowserProfilingIntegration(),\n\t\t],\n\n\t\t// Set tracesSampleRate to 1.0 to capture 100%\n\t\t// of transactions for performance monitoring.\n\t\t// We recommend adjusting this value in production\n\t\ttracesSampleRate: 1.0,\n\n\t\t// Capture Replay for 10% of all sessions,\n\t\t// plus for 100% of sessions with an error\n\t\treplaysSessionSampleRate: 0.1,\n\t\treplaysOnErrorSampleRate: 1.0,\n\t})\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAaA,IAAAA,gBAA0B;AAX1B,IAAI,aAAa;AACjB,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EACA;AACA,cAAY,IAAI,eAAe;AAC/B;AAOO,SAASC,QAAO;AACtB,EAAO,KAAK;AAAA,IACX,KAAK,IAAI;AAAA,IACT,aAAa,IAAI;AAAA,IACjB,cAAc;AAAA,MACb,IAAW,eAAe;AAAA,QACzB,wBAA+B;AAAA,UAC9B;AAAA,UACA;AAAA,UACA;AAAA,QACD;AAAA,MACD,CAAC;AAAA;AAAA,MAED,IAAW,OAAO;AAAA,MAClB,IAAW,4BAA4B;AAAA,IACxC;AAAA;AAAA;AAAA;AAAA,IAKA,kBAAkB;AAAA;AAAA;AAAA,IAIlB,0BAA0B;AAAA,IAC1B,0BAA0B;AAAA,EAC3B,CAAC;AACF;",
  "names": ["import_react", "init"]
}
