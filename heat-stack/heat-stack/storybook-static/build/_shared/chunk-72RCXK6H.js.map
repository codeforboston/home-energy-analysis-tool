{
  "version": 3,
  "sources": ["empty-module:#app/utils/totp.server.ts", "empty-module:#app/utils/email.server.ts", "../../../node_modules/@react-email/container/dist/index.mjs", "../../../node_modules/@react-email/html/dist/index.mjs", "../../../node_modules/@react-email/link/dist/index.mjs", "../../../node_modules/@react-email/text/dist/index.mjs", "../../../app/routes/settings+/profile.change-email.tsx", "../../../app/routes/_auth+/verify.tsx", "../../../app/routes/_auth+/login.tsx"],
  "sourcesContent": ["module.exports = {};", "module.exports = {};", "var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\n\n// src/container.tsx\nimport { jsx } from \"react/jsx-runtime\";\nvar Container = (_a) => {\n  var _b = _a, {\n    children,\n    style\n  } = _b, props = __objRest(_b, [\n    \"children\",\n    \"style\"\n  ]);\n  return /* @__PURE__ */ jsx(\n    \"table\",\n    __spreadProps(__spreadValues({\n      align: \"center\",\n      width: \"100%\"\n    }, props), {\n      border: 0,\n      cellPadding: \"0\",\n      cellSpacing: \"0\",\n      role: \"presentation\",\n      style: __spreadValues({ maxWidth: \"37.5em\" }, style),\n      children: /* @__PURE__ */ jsx(\"tbody\", { children: /* @__PURE__ */ jsx(\"tr\", { style: { width: \"100%\" }, children: /* @__PURE__ */ jsx(\"td\", { children }) }) })\n    })\n  );\n};\nexport {\n  Container\n};\n", "var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\n\n// src/html.tsx\nimport { jsx } from \"react/jsx-runtime\";\nvar Html = (_a) => {\n  var _b = _a, {\n    children,\n    lang = \"en\",\n    dir = \"ltr\"\n  } = _b, props = __objRest(_b, [\n    \"children\",\n    \"lang\",\n    \"dir\"\n  ]);\n  return /* @__PURE__ */ jsx(\"html\", __spreadProps(__spreadValues({}, props), { dir, lang, children }));\n};\nexport {\n  Html\n};\n", "var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\n\n// src/link.tsx\nimport { jsx } from \"react/jsx-runtime\";\nvar Link = (_a) => {\n  var _b = _a, {\n    target = \"_blank\",\n    style\n  } = _b, props = __objRest(_b, [\n    \"target\",\n    \"style\"\n  ]);\n  return /* @__PURE__ */ jsx(\n    \"a\",\n    __spreadProps(__spreadValues({}, props), {\n      style: __spreadValues({\n        color: \"#067df7\",\n        textDecoration: \"none\"\n      }, style),\n      target,\n      children: props.children\n    })\n  );\n};\nexport {\n  Link\n};\n", "var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\n\n// src/text.tsx\nimport { jsx } from \"react/jsx-runtime\";\nvar Text = (_a) => {\n  var _b = _a, { style } = _b, props = __objRest(_b, [\"style\"]);\n  return /* @__PURE__ */ jsx(\n    \"p\",\n    __spreadProps(__spreadValues({}, props), {\n      style: __spreadValues({\n        fontSize: \"14px\",\n        lineHeight: \"24px\",\n        margin: \"16px 0\"\n      }, style)\n    })\n  );\n};\nexport {\n  Text\n};\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/settings+/profile.change-email.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/settings+/profile.change-email.tsx\");\n  import.meta.hot.lastModified = \"1706218436656.8838\";\n}\n// REMIX HMR END\n\nimport { conform, useForm } from '@conform-to/react';\nimport { getFieldsetConstraint, parse } from '@conform-to/zod';\nimport * as E from '@react-email/components';\nimport { json, redirect } from '@remix-run/node';\nimport { Form, useActionData, useLoaderData } from '@remix-run/react';\nimport { AuthenticityTokenInput } from 'remix-utils/csrf/react';\nimport { z } from 'zod';\nimport { ErrorList, Field } from '#app/components/forms.tsx';\nimport { Icon } from '#app/components/ui/icon.tsx';\nimport { StatusButton } from '#app/components/ui/status-button.tsx';\nimport { prepareVerification, requireRecentVerification } from '#app/routes/_auth+/verify.tsx';\nimport { requireUserId } from '#app/utils/auth.server.ts';\nimport { validateCSRF } from '#app/utils/csrf.server.ts';\nimport { prisma } from '#app/utils/db.server.ts';\nimport { sendEmail } from '#app/utils/email.server.ts';\nimport { invariant, useIsPending } from '#app/utils/misc.tsx';\nimport { redirectWithToast } from '#app/utils/toast.server.ts';\nimport { EmailSchema } from '#app/utils/user-validation.ts';\nimport { verifySessionStorage } from '#app/utils/verification.server.ts';\nexport const handle = {\n  breadcrumb: <Icon name=\"envelope-closed\">Change Email</Icon>,\n  getSitemapEntries: () => null\n};\nconst newEmailAddressSessionKey = 'new-email-address';\nexport async function handleVerification({\n  request,\n  submission\n}) {\n  await requireRecentVerification(request);\n  invariant(submission.value, 'submission.value should be defined by now');\n  const verifySession = await verifySessionStorage.getSession(request.headers.get('cookie'));\n  const newEmail = verifySession.get(newEmailAddressSessionKey);\n  if (!newEmail) {\n    submission.error[''] = ['You must submit the code on the same device that requested the email change.'];\n    return json({\n      status: 'error',\n      submission\n    }, {\n      status: 400\n    });\n  }\n  const preUpdateUser = await prisma.user.findFirstOrThrow({\n    select: {\n      email: true\n    },\n    where: {\n      id: submission.value.target\n    }\n  });\n  const user = await prisma.user.update({\n    where: {\n      id: submission.value.target\n    },\n    select: {\n      id: true,\n      email: true,\n      username: true\n    },\n    data: {\n      email: newEmail\n    }\n  });\n  void sendEmail({\n    to: preUpdateUser.email,\n    subject: 'Epic Stack email changed',\n    react: <EmailChangeNoticeEmail userId={user.id} />\n  });\n  return redirectWithToast('/settings/profile', {\n    title: 'Email Changed',\n    type: 'success',\n    description: `Your email has been changed to ${user.email}`\n  }, {\n    headers: {\n      'set-cookie': await verifySessionStorage.destroySession(verifySession)\n    }\n  });\n}\nconst ChangeEmailSchema = z.object({\n  email: EmailSchema\n});\nexport async function loader({\n  request\n}) {\n  await requireRecentVerification(request);\n  const userId = await requireUserId(request);\n  const user = await prisma.user.findUnique({\n    where: {\n      id: userId\n    },\n    select: {\n      email: true\n    }\n  });\n  if (!user) {\n    const params = new URLSearchParams({\n      redirectTo: request.url\n    });\n    throw redirect(`/login?${params}`);\n  }\n  return json({\n    user\n  });\n}\nexport async function action({\n  request\n}) {\n  const userId = await requireUserId(request);\n  const formData = await request.formData();\n  await validateCSRF(formData, request.headers);\n  const submission = await parse(formData, {\n    schema: ChangeEmailSchema.superRefine(async (data, ctx) => {\n      const existingUser = await prisma.user.findUnique({\n        where: {\n          email: data.email\n        }\n      });\n      if (existingUser) {\n        ctx.addIssue({\n          path: ['email'],\n          code: z.ZodIssueCode.custom,\n          message: 'This email is already in use.'\n        });\n      }\n    }),\n    async: true\n  });\n  if (submission.intent !== 'submit') {\n    return json({\n      status: 'idle',\n      submission\n    });\n  }\n  if (!submission.value) {\n    return json({\n      status: 'error',\n      submission\n    }, {\n      status: 400\n    });\n  }\n  const {\n    otp,\n    redirectTo,\n    verifyUrl\n  } = await prepareVerification({\n    period: 10 * 60,\n    request,\n    target: userId,\n    type: 'change-email'\n  });\n  const response = await sendEmail({\n    to: submission.value.email,\n    subject: `Epic Notes Email Change Verification`,\n    react: <EmailChangeEmail verifyUrl={verifyUrl.toString()} otp={otp} />\n  });\n  if (response.status === 'success') {\n    const verifySession = await verifySessionStorage.getSession();\n    verifySession.set(newEmailAddressSessionKey, submission.value.email);\n    return redirect(redirectTo.toString(), {\n      headers: {\n        'set-cookie': await verifySessionStorage.commitSession(verifySession)\n      }\n    });\n  } else {\n    submission.error[''] = [response.error.message];\n    return json({\n      status: 'error',\n      submission\n    }, {\n      status: 500\n    });\n  }\n}\nexport function EmailChangeEmail({\n  verifyUrl,\n  otp\n}) {\n  return <E.Html lang=\"en\" dir=\"ltr\">\n\t\t\t<E.Container>\n\t\t\t\t<h1>\n\t\t\t\t\t<E.Text>Epic Notes Email Change</E.Text>\n\t\t\t\t</h1>\n\t\t\t\t<p>\n\t\t\t\t\t<E.Text>\n\t\t\t\t\t\tHere's your verification code: <strong>{otp}</strong>\n\t\t\t\t\t</E.Text>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<E.Text>Or click the link:</E.Text>\n\t\t\t\t</p>\n\t\t\t\t<E.Link href={verifyUrl}>{verifyUrl}</E.Link>\n\t\t\t</E.Container>\n\t\t</E.Html>;\n}\n_c = EmailChangeEmail;\nexport function EmailChangeNoticeEmail({\n  userId\n}) {\n  return <E.Html lang=\"en\" dir=\"ltr\">\n\t\t\t<E.Container>\n\t\t\t\t<h1>\n\t\t\t\t\t<E.Text>Your Epic Notes email has been changed</E.Text>\n\t\t\t\t</h1>\n\t\t\t\t<p>\n\t\t\t\t\t<E.Text>\n\t\t\t\t\t\tWe're writing to let you know that your Epic Notes email has been\n\t\t\t\t\t\tchanged.\n\t\t\t\t\t</E.Text>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<E.Text>\n\t\t\t\t\t\tIf you changed your email address, then you can safely ignore this.\n\t\t\t\t\t\tBut if you did not change your email address, then please contact\n\t\t\t\t\t\tsupport immediately.\n\t\t\t\t\t</E.Text>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<E.Text>Your Account ID: {userId}</E.Text>\n\t\t\t\t</p>\n\t\t\t</E.Container>\n\t\t</E.Html>;\n}\n_c2 = EmailChangeNoticeEmail;\nexport default function ChangeEmailIndex() {\n  _s();\n  const data = useLoaderData();\n  const actionData = useActionData();\n  const [form, fields] = useForm({\n    id: 'change-email-form',\n    constraint: getFieldsetConstraint(ChangeEmailSchema),\n    lastSubmission: actionData?.submission,\n    onValidate({\n      formData\n    }) {\n      return parse(formData, {\n        schema: ChangeEmailSchema\n      });\n    }\n  });\n  const isPending = useIsPending();\n  return <div>\n\t\t\t<h1 className=\"text-h1\">Change Email</h1>\n\t\t\t<p>You will receive an email at the new email address to confirm.</p>\n\t\t\t<p>\n\t\t\t\tAn email notice will also be sent to your old address {data.user.email}.\n\t\t\t</p>\n\t\t\t<div className=\"mx-auto mt-5 max-w-sm\">\n\t\t\t\t<Form method=\"POST\" {...form.props}>\n\t\t\t\t\t<AuthenticityTokenInput />\n\t\t\t\t\t<Field labelProps={{\n          children: 'New Email'\n        }} inputProps={conform.input(fields.email)} errors={fields.email.errors} />\n\t\t\t\t\t<ErrorList id={form.errorId} errors={form.errors} />\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<StatusButton status={isPending ? 'pending' : actionData?.status ?? 'idle'}>\n\t\t\t\t\t\t\tSend Confirmation\n\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t</div>\n\t\t\t\t</Form>\n\t\t\t</div>\n\t\t</div>;\n}\n_s(ChangeEmailIndex, \"c7eLdpHqN4NN5gMZvVwHBI//RLo=\", false, function () {\n  return [useLoaderData, useActionData, useForm, useIsPending];\n});\n_c3 = ChangeEmailIndex;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"EmailChangeEmail\");\n$RefreshReg$(_c2, \"EmailChangeNoticeEmail\");\n$RefreshReg$(_c3, \"ChangeEmailIndex\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_auth+/verify.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_auth+/verify.tsx\");\n  import.meta.hot.lastModified = \"1706218436648.8835\";\n}\n// REMIX HMR END\n\nimport { conform, useForm } from '@conform-to/react';\nimport { getFieldsetConstraint, parse } from '@conform-to/zod';\nimport { json } from '@remix-run/node';\nimport { Form, useActionData, useSearchParams } from '@remix-run/react';\nimport { AuthenticityTokenInput } from 'remix-utils/csrf/react';\nimport { HoneypotInputs } from 'remix-utils/honeypot/react';\nimport { z } from 'zod';\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx';\nimport { ErrorList, Field } from '#app/components/forms.tsx';\nimport { Spacer } from '#app/components/spacer.tsx';\nimport { StatusButton } from '#app/components/ui/status-button.tsx';\nimport { handleVerification as handleChangeEmailVerification } from '#app/routes/settings+/profile.change-email.tsx';\nimport { twoFAVerificationType } from '#app/routes/settings+/profile.two-factor.tsx';\nimport { requireUserId } from '#app/utils/auth.server.ts';\nimport { validateCSRF } from '#app/utils/csrf.server.ts';\nimport { prisma } from '#app/utils/db.server.ts';\nimport { checkHoneypot } from '#app/utils/honeypot.server.ts';\nimport { ensurePrimary } from '#app/utils/litefs.server.ts';\nimport { getDomainUrl, useIsPending } from '#app/utils/misc.tsx';\nimport { redirectWithToast } from '#app/utils/toast.server.ts';\nimport { generateTOTP, verifyTOTP } from '#app/utils/totp.server.ts';\nimport { handleVerification as handleLoginTwoFactorVerification, shouldRequestTwoFA } from './login.tsx';\nimport { handleVerification as handleOnboardingVerification } from './onboarding.tsx';\nimport { handleVerification as handleResetPasswordVerification } from './reset-password.tsx';\nexport const codeQueryParam = 'code';\nexport const targetQueryParam = 'target';\nexport const typeQueryParam = 'type';\nexport const redirectToQueryParam = 'redirectTo';\nconst types = ['onboarding', 'reset-password', 'change-email', '2fa'];\nconst VerificationTypeSchema = z.enum(types);\nconst VerifySchema = z.object({\n  [codeQueryParam]: z.string().min(6).max(6),\n  [typeQueryParam]: VerificationTypeSchema,\n  [targetQueryParam]: z.string(),\n  [redirectToQueryParam]: z.string().optional()\n});\nexport async function action({\n  request\n}) {\n  const formData = await request.formData();\n  checkHoneypot(formData);\n  await validateCSRF(formData, request.headers);\n  return validateRequest(request, formData);\n}\nexport function getRedirectToUrl({\n  request,\n  type,\n  target,\n  redirectTo\n}) {\n  const redirectToUrl = new URL(`${getDomainUrl(request)}/verify`);\n  redirectToUrl.searchParams.set(typeQueryParam, type);\n  redirectToUrl.searchParams.set(targetQueryParam, target);\n  if (redirectTo) {\n    redirectToUrl.searchParams.set(redirectToQueryParam, redirectTo);\n  }\n  return redirectToUrl;\n}\nexport async function requireRecentVerification(request) {\n  const userId = await requireUserId(request);\n  const shouldReverify = await shouldRequestTwoFA(request);\n  if (shouldReverify) {\n    const reqUrl = new URL(request.url);\n    const redirectUrl = getRedirectToUrl({\n      request,\n      target: userId,\n      type: twoFAVerificationType,\n      redirectTo: reqUrl.pathname + reqUrl.search\n    });\n    throw await redirectWithToast(redirectUrl.toString(), {\n      title: 'Please Reverify',\n      description: 'Please reverify your account before proceeding'\n    });\n  }\n}\nexport async function prepareVerification({\n  period,\n  request,\n  type,\n  target\n}) {\n  const verifyUrl = getRedirectToUrl({\n    request,\n    type,\n    target\n  });\n  const redirectTo = new URL(verifyUrl.toString());\n  const {\n    otp,\n    ...verificationConfig\n  } = generateTOTP({\n    algorithm: 'SHA256',\n    // Leaving off 0 and O on purpose to avoid confusing users.\n    charSet: 'ABCDEFGHIJKLMNPQRSTUVWXYZ123456789',\n    period\n  });\n  const verificationData = {\n    type,\n    target,\n    ...verificationConfig,\n    expiresAt: new Date(Date.now() + verificationConfig.period * 1000)\n  };\n  await prisma.verification.upsert({\n    where: {\n      target_type: {\n        target,\n        type\n      }\n    },\n    create: verificationData,\n    update: verificationData\n  });\n\n  // add the otp to the url we'll email the user.\n  verifyUrl.searchParams.set(codeQueryParam, otp);\n  return {\n    otp,\n    redirectTo,\n    verifyUrl\n  };\n}\nexport async function isCodeValid({\n  code,\n  type,\n  target\n}) {\n  const verification = await prisma.verification.findUnique({\n    where: {\n      target_type: {\n        target,\n        type\n      },\n      OR: [{\n        expiresAt: {\n          gt: new Date()\n        }\n      }, {\n        expiresAt: null\n      }]\n    },\n    select: {\n      algorithm: true,\n      secret: true,\n      period: true,\n      charSet: true\n    }\n  });\n  if (!verification) return false;\n  //@ts-ignore\n  const result = verifyTOTP({\n    otp: code,\n    ...verification\n  });\n  if (!result) return false;\n  return true;\n}\nasync function validateRequest(request, body) {\n  const submission = await parse(body, {\n    schema: VerifySchema.superRefine(async (data, ctx) => {\n      const codeIsValid = await isCodeValid({\n        code: data[codeQueryParam],\n        type: data[typeQueryParam],\n        target: data[targetQueryParam]\n      });\n      if (!codeIsValid) {\n        ctx.addIssue({\n          path: ['code'],\n          code: z.ZodIssueCode.custom,\n          message: `Invalid code`\n        });\n        return;\n      }\n    }),\n    async: true\n  });\n  if (submission.intent !== 'submit') {\n    return json({\n      status: 'idle',\n      submission\n    });\n  }\n  if (!submission.value) {\n    return json({\n      status: 'error',\n      submission\n    }, {\n      status: 400\n    });\n  }\n\n  // this code path could be part of a loader (GET request), so we need to make\n  // sure we're running on primary because we're about to make writes.\n  await ensurePrimary();\n  const {\n    value: submissionValue\n  } = submission;\n  async function deleteVerification() {\n    await prisma.verification.delete({\n      where: {\n        target_type: {\n          type: submissionValue[typeQueryParam],\n          target: submissionValue[targetQueryParam]\n        }\n      }\n    });\n  }\n  switch (submissionValue[typeQueryParam]) {\n    case 'reset-password':\n      {\n        await deleteVerification();\n        return handleResetPasswordVerification({\n          request,\n          body,\n          submission\n        });\n      }\n    case 'onboarding':\n      {\n        await deleteVerification();\n        return handleOnboardingVerification({\n          request,\n          body,\n          submission\n        });\n      }\n    case 'change-email':\n      {\n        await deleteVerification();\n        return handleChangeEmailVerification({\n          request,\n          body,\n          submission\n        });\n      }\n    case '2fa':\n      {\n        return handleLoginTwoFactorVerification({\n          request,\n          body,\n          submission\n        });\n      }\n  }\n}\nexport default function VerifyRoute() {\n  _s();\n  const [searchParams] = useSearchParams();\n  const isPending = useIsPending();\n  const actionData = useActionData();\n  const parsedType = VerificationTypeSchema.safeParse(searchParams.get(typeQueryParam));\n  const type = parsedType.success ? parsedType.data : null;\n  const checkEmail = <>\n\t\t\t<h1 className=\"text-h1\">Check your email</h1>\n\t\t\t<p className=\"mt-3 text-body-md text-muted-foreground\">\n\t\t\t\tWe've sent you a code to verify your email address.\n\t\t\t</p>\n\t\t</>;\n  const headings = {\n    onboarding: checkEmail,\n    'reset-password': checkEmail,\n    'change-email': checkEmail,\n    '2fa': <>\n\t\t\t\t<h1 className=\"text-h1\">Check your 2FA app</h1>\n\t\t\t\t<p className=\"mt-3 text-body-md text-muted-foreground\">\n\t\t\t\t\tPlease enter your 2FA code to verify your identity.\n\t\t\t\t</p>\n\t\t\t</>\n  };\n  const [form, fields] = useForm({\n    id: 'verify-form',\n    constraint: getFieldsetConstraint(VerifySchema),\n    lastSubmission: actionData?.submission,\n    onValidate({\n      formData\n    }) {\n      return parse(formData, {\n        schema: VerifySchema\n      });\n    },\n    defaultValue: {\n      code: searchParams.get(codeQueryParam) ?? '',\n      type,\n      target: searchParams.get(targetQueryParam) ?? '',\n      redirectTo: searchParams.get(redirectToQueryParam) ?? ''\n    }\n  });\n  return <main className=\"container flex flex-col justify-center pb-32 pt-20\">\n\t\t\t<div className=\"text-center\">\n\t\t\t\t{type ? headings[type] : 'Invalid Verification Type'}\n\t\t\t</div>\n\n\t\t\t<Spacer size=\"xs\" />\n\n\t\t\t<div className=\"mx-auto flex w-72 max-w-full flex-col justify-center gap-1\">\n\t\t\t\t<div>\n\t\t\t\t\t<ErrorList errors={form.errors} id={form.errorId} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex w-full gap-2\">\n\t\t\t\t\t<Form method=\"POST\" {...form.props} className=\"flex-1\">\n\t\t\t\t\t\t<AuthenticityTokenInput />\n\t\t\t\t\t\t<HoneypotInputs />\n\t\t\t\t\t\t<Field labelProps={{\n            htmlFor: fields[codeQueryParam].id,\n            children: 'Code'\n          }} inputProps={conform.input(fields[codeQueryParam])} errors={fields[codeQueryParam].errors} />\n\t\t\t\t\t\t<input {...conform.input(fields[typeQueryParam], {\n            type: 'hidden'\n          })} />\n\t\t\t\t\t\t<input {...conform.input(fields[targetQueryParam], {\n            type: 'hidden'\n          })} />\n\t\t\t\t\t\t<input {...conform.input(fields[redirectToQueryParam], {\n            type: 'hidden'\n          })} />\n\t\t\t\t\t\t<StatusButton className=\"w-full\" status={isPending ? 'pending' : actionData?.status ?? 'idle'} type=\"submit\" disabled={isPending}>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t</Form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</main>;\n}\n_s(VerifyRoute, \"mdQnfHSnsVqWxr+aBh52a6+GYjY=\", false, function () {\n  return [useSearchParams, useIsPending, useActionData, useForm];\n});\n_c = VerifyRoute;\nexport function ErrorBoundary() {\n  return <GeneralErrorBoundary />;\n}\n_c2 = ErrorBoundary;\nvar _c, _c2;\n$RefreshReg$(_c, \"VerifyRoute\");\n$RefreshReg$(_c2, \"ErrorBoundary\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_auth+/login.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_auth+/login.tsx\");\n  import.meta.hot.lastModified = \"1706218436648.8835\";\n}\n// REMIX HMR END\n\nimport { conform, useForm } from '@conform-to/react';\nimport { getFieldsetConstraint, parse } from '@conform-to/zod';\nimport { json, redirect } from '@remix-run/node';\nimport { Form, Link, useActionData, useSearchParams } from '@remix-run/react';\nimport { AuthenticityTokenInput } from 'remix-utils/csrf/react';\nimport { HoneypotInputs } from 'remix-utils/honeypot/react';\nimport { safeRedirect } from 'remix-utils/safe-redirect';\nimport { z } from 'zod';\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx';\nimport { CheckboxField, ErrorList, Field } from '#app/components/forms.tsx';\nimport { Spacer } from '#app/components/spacer.tsx';\nimport { StatusButton } from '#app/components/ui/status-button.tsx';\nimport { twoFAVerificationType } from '#app/routes/settings+/profile.two-factor.tsx';\nimport { getUserId, login, requireAnonymous, sessionKey } from '#app/utils/auth.server.ts';\nimport { ProviderConnectionForm, providerNames } from '#app/utils/connections.tsx';\nimport { validateCSRF } from '#app/utils/csrf.server.ts';\nimport { prisma } from '#app/utils/db.server.ts';\nimport { checkHoneypot } from '#app/utils/honeypot.server.ts';\nimport { combineResponseInits, invariant, useIsPending } from '#app/utils/misc.tsx';\nimport { authSessionStorage } from '#app/utils/session.server.ts';\nimport { redirectWithToast } from '#app/utils/toast.server.ts';\nimport { PasswordSchema, UsernameSchema } from '#app/utils/user-validation.ts';\nimport { verifySessionStorage } from '#app/utils/verification.server.ts';\nimport { getRedirectToUrl } from './verify.tsx';\nconst verifiedTimeKey = 'verified-time';\nconst unverifiedSessionIdKey = 'unverified-session-id';\nconst rememberKey = 'remember';\nexport async function handleNewSession({\n  request,\n  session,\n  redirectTo,\n  remember\n}, responseInit) {\n  const verification = await prisma.verification.findUnique({\n    select: {\n      id: true\n    },\n    where: {\n      target_type: {\n        target: session.userId,\n        type: twoFAVerificationType\n      }\n    }\n  });\n  const userHasTwoFactor = Boolean(verification);\n  if (userHasTwoFactor) {\n    const verifySession = await verifySessionStorage.getSession();\n    verifySession.set(unverifiedSessionIdKey, session.id);\n    verifySession.set(rememberKey, remember);\n    const redirectUrl = getRedirectToUrl({\n      request,\n      type: twoFAVerificationType,\n      target: session.userId,\n      redirectTo\n    });\n    return redirect(`${redirectUrl.pathname}?${redirectUrl.searchParams}`, combineResponseInits({\n      headers: {\n        'set-cookie': await verifySessionStorage.commitSession(verifySession)\n      }\n    }, responseInit));\n  } else {\n    const authSession = await authSessionStorage.getSession(request.headers.get('cookie'));\n    authSession.set(sessionKey, session.id);\n    return redirect(safeRedirect(redirectTo), combineResponseInits({\n      headers: {\n        'set-cookie': await authSessionStorage.commitSession(authSession, {\n          expires: remember ? session.expirationDate : undefined\n        })\n      }\n    }, responseInit));\n  }\n}\nexport async function handleVerification({\n  request,\n  submission\n}) {\n  invariant(submission.value, 'Submission should have a value by this point');\n  const authSession = await authSessionStorage.getSession(request.headers.get('cookie'));\n  const verifySession = await verifySessionStorage.getSession(request.headers.get('cookie'));\n  const remember = verifySession.get(rememberKey);\n  const {\n    redirectTo\n  } = submission.value;\n  const headers = new Headers();\n  authSession.set(verifiedTimeKey, Date.now());\n  const unverifiedSessionId = verifySession.get(unverifiedSessionIdKey);\n  if (unverifiedSessionId) {\n    const session = await prisma.session.findUnique({\n      select: {\n        expirationDate: true\n      },\n      where: {\n        id: unverifiedSessionId\n      }\n    });\n    if (!session) {\n      throw await redirectWithToast('/login', {\n        type: 'error',\n        title: 'Invalid session',\n        description: 'Could not find session to verify. Please try again.'\n      });\n    }\n    authSession.set(sessionKey, unverifiedSessionId);\n    headers.append('set-cookie', await authSessionStorage.commitSession(authSession, {\n      expires: remember ? session.expirationDate : undefined\n    }));\n  } else {\n    headers.append('set-cookie', await authSessionStorage.commitSession(authSession));\n  }\n  headers.append('set-cookie', await verifySessionStorage.destroySession(verifySession));\n  return redirect(safeRedirect(redirectTo), {\n    headers\n  });\n}\nexport async function shouldRequestTwoFA(request) {\n  const authSession = await authSessionStorage.getSession(request.headers.get('cookie'));\n  const verifySession = await verifySessionStorage.getSession(request.headers.get('cookie'));\n  if (verifySession.has(unverifiedSessionIdKey)) return true;\n  const userId = await getUserId(request);\n  if (!userId) return false;\n  // if it's over two hours since they last verified, we should request 2FA again\n  const userHasTwoFA = await prisma.verification.findUnique({\n    select: {\n      id: true\n    },\n    where: {\n      target_type: {\n        target: userId,\n        type: twoFAVerificationType\n      }\n    }\n  });\n  if (!userHasTwoFA) return false;\n  const verifiedTime = authSession.get(verifiedTimeKey) ?? new Date(0);\n  const twoHours = 1000 * 60 * 2;\n  return Date.now() - verifiedTime > twoHours;\n}\nconst LoginFormSchema = z.object({\n  username: UsernameSchema,\n  password: PasswordSchema,\n  redirectTo: z.string().optional(),\n  remember: z.boolean().optional()\n});\nexport async function loader({\n  request\n}) {\n  await requireAnonymous(request);\n  return json({});\n}\nexport async function action({\n  request\n}) {\n  await requireAnonymous(request);\n  const formData = await request.formData();\n  await validateCSRF(formData, request.headers);\n  checkHoneypot(formData);\n  const submission = await parse(formData, {\n    schema: intent => LoginFormSchema.transform(async (data, ctx) => {\n      if (intent !== 'submit') return {\n        ...data,\n        session: null\n      };\n      const session = await login(data);\n      if (!session) {\n        ctx.addIssue({\n          code: z.ZodIssueCode.custom,\n          message: 'Invalid username or password'\n        });\n        return z.NEVER;\n      }\n      return {\n        ...data,\n        session\n      };\n    }),\n    async: true\n  });\n  // get the password off the payload that's sent back\n  delete submission.payload.password;\n  if (submission.intent !== 'submit') {\n    // @ts-expect-error - conform should probably have support for doing this\n    delete submission.value?.password;\n    return json({\n      status: 'idle',\n      submission\n    });\n  }\n  if (!submission.value?.session) {\n    return json({\n      status: 'error',\n      submission\n    }, {\n      status: 400\n    });\n  }\n  const {\n    session,\n    remember,\n    redirectTo\n  } = submission.value;\n  return handleNewSession({\n    request,\n    session,\n    remember: remember ?? false,\n    redirectTo\n  });\n}\nexport default function LoginPage() {\n  _s();\n  const actionData = useActionData();\n  const isPending = useIsPending();\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get('redirectTo');\n  const [form, fields] = useForm({\n    id: 'login-form',\n    constraint: getFieldsetConstraint(LoginFormSchema),\n    defaultValue: {\n      redirectTo\n    },\n    lastSubmission: actionData?.submission,\n    onValidate({\n      formData\n    }) {\n      return parse(formData, {\n        schema: LoginFormSchema\n      });\n    },\n    shouldRevalidate: 'onBlur'\n  });\n  return <div className=\"flex min-h-full flex-col justify-center pb-32 pt-20\">\n\t\t\t<div className=\"mx-auto w-full max-w-md\">\n\t\t\t\t<div className=\"flex flex-col gap-3 text-center\">\n\t\t\t\t\t<h1 className=\"text-h1\">Welcome back!</h1>\n\t\t\t\t\t<p className=\"text-body-md text-muted-foreground\">\n\t\t\t\t\t\tPlease enter your details.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<Spacer size=\"xs\" />\n\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"mx-auto w-full max-w-md px-8\">\n\t\t\t\t\t\t<Form method=\"POST\" {...form.props}>\n\t\t\t\t\t\t\t<AuthenticityTokenInput />\n\t\t\t\t\t\t\t<HoneypotInputs />\n\t\t\t\t\t\t\t<Field labelProps={{\n              children: 'Username'\n            }} inputProps={{\n              ...conform.input(fields.username),\n              autoFocus: true,\n              className: 'lowercase'\n            }} errors={fields.username.errors} />\n\n\t\t\t\t\t\t\t<Field labelProps={{\n              children: 'Password'\n            }} inputProps={conform.input(fields.password, {\n              type: 'password'\n            })} errors={fields.password.errors} />\n\n\t\t\t\t\t\t\t<div className=\"flex justify-between\">\n\t\t\t\t\t\t\t\t<CheckboxField labelProps={{\n                htmlFor: fields.remember.id,\n                children: 'Remember me'\n              }} buttonProps={conform.input(fields.remember, {\n                type: 'checkbox'\n              })} errors={fields.remember.errors} />\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Link to=\"/forgot-password\" className=\"text-body-xs font-semibold\">\n\t\t\t\t\t\t\t\t\t\tForgot password?\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<input {...conform.input(fields.redirectTo, {\n              type: 'hidden'\n            })} />\n\t\t\t\t\t\t\t<ErrorList errors={form.errors} id={form.errorId} />\n\n\t\t\t\t\t\t\t<div className=\"flex items-center justify-between gap-6 pt-3\">\n\t\t\t\t\t\t\t\t<StatusButton className=\"w-full\" status={isPending ? 'pending' : actionData?.status ?? 'idle'} type=\"submit\" disabled={isPending}>\n\t\t\t\t\t\t\t\t\tLog in\n\t\t\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t<ul className=\"mt-5 flex flex-col gap-5 border-b-2 border-t-2 border-border py-3\">\n\t\t\t\t\t\t\t{providerNames.map(providerName => <li key={providerName}>\n\t\t\t\t\t\t\t\t\t<ProviderConnectionForm type=\"Login\" providerName={providerName} redirectTo={redirectTo} />\n\t\t\t\t\t\t\t\t</li>)}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<div className=\"flex items-center justify-center gap-2 pt-6\">\n\t\t\t\t\t\t\t<span className=\"text-muted-foreground\">New here?</span>\n\t\t\t\t\t\t\t<Link to={redirectTo ? `/signup?${encodeURIComponent(redirectTo)}` : '/signup'}>\n\t\t\t\t\t\t\t\tCreate an account\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>;\n}\n_s(LoginPage, \"pOytQzQfSlfERSUoCdV/IF0+RIo=\", false, function () {\n  return [useActionData, useIsPending, useSearchParams, useForm];\n});\n_c = LoginPage;\nexport const meta = () => {\n  return [{\n    title: 'Login to Epic Notes'\n  }];\n};\nexport function ErrorBoundary() {\n  return <GeneralErrorBoundary />;\n}\n_c2 = ErrorBoundary;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoginPage\");\n$RefreshReg$(_c2, \"ErrorBoundary\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_jsx_runtime", "__defProp", "__defProps", "__getOwnPropDescs", "__getOwnPropSymbols", "__hasOwnProp", "__propIsEnum", "__defNormalProp", "__spreadValues", "__spreadProps", "__objRest", "import_jsx_runtime", "__defProp", "__defProps", "__getOwnPropDescs", "__getOwnPropSymbols", "__hasOwnProp", "__propIsEnum", "__defNormalProp", "__spreadValues", "__spreadProps", "__objRest", "Link", "import_jsx_runtime", "__defProp", "__defProps", "__getOwnPropDescs", "__getOwnPropSymbols", "__hasOwnProp", "__propIsEnum", "__defNormalProp", "__spreadValues", "__spreadProps", "__objRest", "import_node", "import_node", "import_auth_server", "import_csrf_server", "import_db_server", "import_honeypot_server", "import_toast_server", "import_jsx_dev_runtime", "_s", "_s", "_c", "ErrorBoundary", "_c2", "import_auth_server", "import_csrf_server", "import_db_server", "import_toast_server", "import_verification_server", "import_jsx_dev_runtime", "_s", "Link", "_c", "_c2", "_s", "_c3"]
}
